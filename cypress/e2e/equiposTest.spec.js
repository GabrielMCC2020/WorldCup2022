// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Equipos Test', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Equipos Test', async function() {
    // Test name: Equipos Test
    // Step # | name | target | value
    // 1 | open | http://localhost:8000/ | 
    await driver.get("http://localhost:8000/")
    // 2 | setWindowSize | 1094x816 | 
    await driver.manage().window().setRect({ width: 1094, height: 816 })
    // 3 | click | linkText=Register | 
    await driver.findElement(By.linkText("Register")).click()
    // 4 | click | linkText=Equipos | 
    await driver.findElement(By.linkText("Equipos")).click()
    // 5 | click | css=.tracking-wide | 
    await driver.findElement(By.css(".tracking-wide")).click()
    // 6 | click | name=tournament_id | 
    await driver.findElement(By.name("tournament_id")).click()
    // 7 | select | name=tournament_id | label=Torneo6
    {
      const dropdown = await driver.findElement(By.name("tournament_id"))
      await dropdown.findElement(By.xpath("//option[. = 'Torneo6']")).click()
    }
    // 8 | click | name=school_id | 
    await driver.findElement(By.name("school_id")).click()
    // 9 | select | name=school_id | label=Universidad del Altiplano
    {
      const dropdown = await driver.findElement(By.name("school_id"))
      await dropdown.findElement(By.xpath("//option[. = 'Universidad del Altiplano']")).click()
    }
    // 10 | click | name=cycle_id | 
    await driver.findElement(By.name("cycle_id")).click()
    // 11 | select | name=cycle_id | label=Noveno Ciclo
    {
      const dropdown = await driver.findElement(By.name("cycle_id"))
      await dropdown.findElement(By.xpath("//option[. = 'Noveno Ciclo']")).click()
    }
    // 12 | click | css=.flex:nth-child(3) .border-gray-300 | 
    await driver.findElement(By.css(".flex:nth-child(3) .border-gray-300")).click()
    // 13 | type | css=.flex:nth-child(3) .border-gray-300 | Los choclitos
    await driver.findElement(By.css(".flex:nth-child(3) .border-gray-300")).sendKeys("Los choclitos")
    // 14 | click | css=.flex:nth-child(4) .border-gray-300 | 
    await driver.findElement(By.css(".flex:nth-child(4) .border-gray-300")).click()
    // 15 | type | css=.flex:nth-child(4) .border-gray-300 | Winners
    await driver.findElement(By.css(".flex:nth-child(4) .border-gray-300")).sendKeys("Winners")
    // 16 | click | css=.flex:nth-child(5) > .mb-2:nth-child(1) > .border-gray-300 | 
    await driver.findElement(By.css(".flex:nth-child(5) > .mb-2:nth-child(1) > .border-gray-300")).click()
    // 17 | select | css=.flex:nth-child(5) > .mb-2:nth-child(1) > .border-gray-300 | label=Masculino
    {
      const dropdown = await driver.findElement(By.css(".flex:nth-child(5) > .mb-2:nth-child(1) > .border-gray-300"))
      await dropdown.findElement(By.xpath("//option[. = 'Masculino']")).click()
    }
    // 18 | click | css=.flex:nth-child(5) > .mb-2:nth-child(2) > .border-gray-300 | 
    await driver.findElement(By.css(".flex:nth-child(5) > .mb-2:nth-child(2) > .border-gray-300")).click()
    // 19 | select | css=.flex:nth-child(5) > .mb-2:nth-child(2) > .border-gray-300 | label=green
    {
      const dropdown = await driver.findElement(By.css(".flex:nth-child(5) > .mb-2:nth-child(2) > .border-gray-300"))
      await dropdown.findElement(By.xpath("//option[. = 'green']")).click()
    }
    // 20 | click | css=.form-check:nth-child(1) > .form-check-label | 
    await driver.findElement(By.css(".form-check:nth-child(1) > .form-check-label")).click()
    // 21 | click | css=.bg-gray-800:nth-child(2) | 
    await driver.findElement(By.css(".bg-gray-800:nth-child(2)")).click()
    // 22 | click | css=.swal2-confirm | 
    await driver.findElement(By.css(".swal2-confirm")).click()
    // 23 | click | css=.text-sm:nth-child(1) > .px-6:nth-child(8) > .inline-flex:nth-child(1) | 
    await driver.findElement(By.css(".text-sm:nth-child(1) > .px-6:nth-child(8) > .inline-flex:nth-child(1)")).click()
    // 24 | click | name=tournament_id | 
    await driver.findElement(By.name("tournament_id")).click()
    // 25 | click | name=tournament_id | 
    await driver.findElement(By.name("tournament_id")).click()
    // 26 | click | name=cycle_id | 
    await driver.findElement(By.name("cycle_id")).click()
    // 27 | select | name=cycle_id | label=Decimo Ciclo
    {
      const dropdown = await driver.findElement(By.name("cycle_id"))
      await dropdown.findElement(By.xpath("//option[. = 'Decimo Ciclo']")).click()
    }
    // 28 | click | css=.flex:nth-child(4) .border-gray-300 | 
    await driver.findElement(By.css(".flex:nth-child(4) .border-gray-300")).click()
    // 29 | type | css=.flex:nth-child(4) .border-gray-300 | The best
    await driver.findElement(By.css(".flex:nth-child(4) .border-gray-300")).sendKeys("The best")
    // 30 | click | css=.bg-gray-800:nth-child(2) | 
    await driver.findElement(By.css(".bg-gray-800:nth-child(2)")).click()
    // 31 | click | css=.swal2-confirm | 
    await driver.findElement(By.css(".swal2-confirm")).click()
    // 32 | click | css=.text-sm:nth-child(1) .inline-flex:nth-child(2) | 
    await driver.findElement(By.css(".text-sm:nth-child(1) .inline-flex:nth-child(2)")).click()
    // 33 | click | css=.swal2-confirm | 
    await driver.findElement(By.css(".swal2-confirm")).click()
    // 34 | click | css=.swal2-confirm | 
    await driver.findElement(By.css(".swal2-confirm")).click()
  })
})
